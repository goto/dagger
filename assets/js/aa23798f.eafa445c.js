"use strict";(self.webpackChunkdagger=self.webpackChunkdagger||[]).push([[1486],{5680:(e,t,r)=>{r.d(t,{xA:()=>p,yg:()=>d});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var g=n.createContext({}),s=function(e){var t=n.useContext(g),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(g.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,g=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=s(r),m=a,d=c["".concat(g,".").concat(m)]||c[m]||u[m]||o;return r?n.createElement(d,i(i({ref:t},p),{},{components:r})):n.createElement(d,i({ref:t},p))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var g in t)hasOwnProperty.call(t,g)&&(l[g]=t[g]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},3073:(e,t,r)=>{r.r(t),r.d(t,{contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>g});var n=r(8168),a=(r(6540),r(5680));const o={},i="Data Aggregation using a Tumble Window",l={unversionedId:"examples/aggregation_tumble_window",id:"examples/aggregation_tumble_window",isDocsHomePage:!1,title:"Data Aggregation using a Tumble Window",description:"About this example",source:"@site/docs/examples/aggregation_tumble_window.md",sourceDirName:"examples",slug:"/examples/aggregation_tumble_window",permalink:"/dagger/docs/examples/aggregation_tumble_window",editUrl:"https://github.com/goto/dagger/edit/master/docs/docs/examples/aggregation_tumble_window.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Overview",permalink:"/dagger/docs/examples/overview"},next:{title:"Removing duplicate records using Transformers",permalink:"/dagger/docs/examples/deduplication_transformer"}},g=[{value:"About this example",id:"about-this-example",children:[]},{value:"Before Trying This Example",id:"before-trying-this-example",children:[]},{value:"Steps",id:"steps",children:[]}],s={toc:g},p="wrapper";function c(e){let{components:t,...r}=e;return(0,a.yg)(p,(0,n.A)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"data-aggregation-using-a-tumble-window"},"Data Aggregation using a Tumble Window"),(0,a.yg)("h2",{id:"about-this-example"},"About this example"),(0,a.yg)("p",null,"In this example, we will count the number of booking orders,(as Kafka records) in every 30 second interval. By the end of this example we will understand how to use Dagger to aggregate data over a specified time window."),(0,a.yg)("h2",{id:"before-trying-this-example"},"Before Trying This Example"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},(0,a.yg)("strong",{parentName:"p"},"You must have Docker installed"),". We can follow ",(0,a.yg)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"this guide")," on how to install and set up Docker in your local machine.")),(0,a.yg)("li",{parentName:"ol"},(0,a.yg)("p",{parentName:"li"},"Clone Dagger repository into your local"),(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/goto/dagger.git\n")))),(0,a.yg)("h2",{id:"steps"},"Steps"),(0,a.yg)("p",null,"Following are the steps for setting up dagger in docker compose -"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"cd into the aggregation directory:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"cd dagger/quickstart/examples/aggregation/tumble_window \n"))),(0,a.yg)("li",{parentName:"ol"},"fire this command to spin up the docker compose:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"docker compose up \n")),"Hang on for a while as it installs all the required dependencies and starts all the required services. After a while we should see the output of the Dagger SQL query in the terminal, which will be the count of booking orders in every 30 second interval."),(0,a.yg)("li",{parentName:"ol"},"fire this command to gracefully close the docker compose:",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"docker compose down \n")),"This will stop all services and remove all the containers.")),(0,a.yg)("p",null,"Congratulations, we are now able to use Dagger for performing aggregation over a tumble window!"))}c.isMDXComponent=!0}}]);