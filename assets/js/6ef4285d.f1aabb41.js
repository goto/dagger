"use strict";(self.webpackChunkdagger=self.webpackChunkdagger||[]).push([[279],{5680:(e,r,t)=>{t.d(r,{xA:()=>c,yg:()=>m});var a=t(6540);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);r&&(a=a.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,a,n=function(e,r){if(null==e)return{};var t,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var s=a.createContext({}),p=function(e){var r=a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=p(e.components);return a.createElement(s.Provider,{value:r},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return a.createElement(a.Fragment,{},r)}},d=a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=p(t),d=n,m=g["".concat(s,".").concat(d)]||g[d]||u[d]||o;return t?a.createElement(m,i(i({ref:r},c),{},{components:t})):a.createElement(m,i({ref:r},c))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var s in r)hasOwnProperty.call(r,s)&&(l[s]=r[s]);l.originalType=e,l[g]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6841:(e,r,t)=>{t.r(r),t.d(r,{contentTitle:()=>i,default:()=>g,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(8168),n=(t(6540),t(5680));const o={},i="Removing duplicate records using Transformers",l={unversionedId:"examples/deduplication_transformer",id:"examples/deduplication_transformer",isDocsHomePage:!1,title:"Removing duplicate records using Transformers",description:"About this example",source:"@site/docs/examples/deduplication_transformer.md",sourceDirName:"examples",slug:"/examples/deduplication_transformer",permalink:"/dagger/docs/examples/deduplication_transformer",editUrl:"https://github.com/goto/dagger/edit/master/docs/docs/examples/deduplication_transformer.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Data Aggregation using a Tumble Window",permalink:"/dagger/docs/examples/aggregation_tumble_window"},next:{title:"Distance computation using Java UDF",permalink:"/dagger/docs/examples/distance_java_udf"}},s=[{value:"About this example",id:"about-this-example",children:[]},{value:"Before Trying This Example",id:"before-trying-this-example",children:[]},{value:"Steps",id:"steps",children:[]}],p={toc:s},c="wrapper";function g(e){let{components:r,...t}=e;return(0,n.yg)(c,(0,a.A)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"removing-duplicate-records-using-transformers"},"Removing duplicate records using Transformers"),(0,n.yg)("h2",{id:"about-this-example"},"About this example"),(0,n.yg)("p",null,"In this example, we will use the DeDuplication Transformer in Dagger to remove the booking orders (as Kafka records) having duplicate ",(0,n.yg)("inlineCode",{parentName:"p"},"order_number"),". By the end of this example we will understand how to use Dagger to remove duplicate data from Kafka source."),(0,n.yg)("h2",{id:"before-trying-this-example"},"Before Trying This Example"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},(0,n.yg)("strong",{parentName:"p"},"We must have Docker installed"),". We can follow ",(0,n.yg)("a",{parentName:"p",href:"https://docs.docker.com/get-docker/"},"this guide")," on how to install and set up Docker in your local machine.")),(0,n.yg)("li",{parentName:"ol"},(0,n.yg)("p",{parentName:"li"},"Clone Dagger repository into your local"),(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/goto/dagger.git\n")))),(0,n.yg)("h2",{id:"steps"},"Steps"),(0,n.yg)("p",null,"Following are the steps for setting up dagger in docker compose -"),(0,n.yg)("ol",null,(0,n.yg)("li",{parentName:"ol"},"cd into the aggregation directory:",(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"cd dagger/quickstart/examples/aggregation/tumble_window \n"))),(0,n.yg)("li",{parentName:"ol"},"fire this command to spin up the docker compose:",(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"docker compose up \n")),"Hang on for a while as it installs all the required dependencies and starts all the required services. After a while we should see the output of the Dagger SQL query in the terminal, which will be the booking logs without any duplicate ",(0,n.yg)("inlineCode",{parentName:"li"},"order_number"),"."),(0,n.yg)("li",{parentName:"ol"},"fire this command to gracefully close the docker compose:",(0,n.yg)("pre",{parentName:"li"},(0,n.yg)("code",{parentName:"pre",className:"language-shell"},"docker compose down \n")),"This will stop and remove all the containers.")),(0,n.yg)("p",null,"Congratulations, we are now able to use Dagger to remove duplicate data from Kafka source!"))}g.isMDXComponent=!0}}]);