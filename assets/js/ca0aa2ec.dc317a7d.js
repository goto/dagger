"use strict";(self.webpackChunkdagger=self.webpackChunkdagger||[]).push([[2563],{5680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>m});var a=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=a.createContext({}),c=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},g=function(e){var t=c(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,d=e.parentName,g=s(e,["components","mdxType","originalType","parentName"]),u=c(n),p=o,m=u["".concat(d,".").concat(p)]||u[p]||l[p]||r;return n?a.createElement(m,i(i({ref:t},g),{},{components:n})):a.createElement(m,i({ref:t},g))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=p;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7817:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var a=n(8168),o=(n(6540),n(5680));const r={},i="ADD UDF",s={unversionedId:"contribute/add_udf",id:"contribute/add_udf",isDocsHomePage:!1,title:"ADD UDF",description:"Want a function to use in SQL which is not supported both by Flink and one of the pre-supported udfs? You can simply write your User-Defined function and contribute to the dagger. Read more on how to use UDFs here.",source:"@site/docs/contribute/add_udf.md",sourceDirName:"contribute",slug:"/contribute/add_udf",permalink:"/dagger/docs/contribute/add_udf",editUrl:"https://github.com/goto/dagger/edit/master/docs/docs/contribute/add_udf.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"ADD Transformer",permalink:"/dagger/docs/contribute/add_transformer"}},d=[],c={toc:d},g="wrapper";function u(e){let{components:t,...n}=e;return(0,o.yg)(g,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"add-udf"},"ADD UDF"),(0,o.yg)("p",null,"Want a function to use in SQL which is not supported both by Flink and one of the pre-supported udfs? You can simply write your User-Defined function and contribute to the dagger. Read more on how to use UDFs ",(0,o.yg)("a",{parentName:"p",href:"/dagger/docs/guides/use_udf"},"here"),"."),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"Note"),": ",(0,o.yg)("em",{parentName:"p"},"Please go through the ",(0,o.yg)("a",{parentName:"em",href:"/dagger/docs/contribute/contribution"},"Contribution guide")," to know about all the conventions and practices we tend to follow and to know about the contribution process to the dagger.")),(0,o.yg)("p",null,"For adding custom UDFs follow these steps:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"Ensure none of the ",(0,o.yg)("a",{parentName:"p",href:"https://nightlies.apache.org/flink/flink-docs-release-1.14/docs/dev/table/functions/systemfunctions/"},"built-in functions")," or ",(0,o.yg)("a",{parentName:"p",href:"/dagger/docs/reference/udfs"},"existing UDF")," suits your requirement.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"For adding a UDF, figure out which type of UDF you required. Flink supports three types of ",(0,o.yg)("a",{parentName:"p",href:"https://nightlies.apache.org/flink/flink-docs-release-1.14/docs/dev/table/functions/udfs/"},"User defined function"),". Choose one of them according to the requirement.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"There are options for programming language you can choose for adding UDF, which is using Java, Scala and Python.")),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"For adding UDF with Java/Scala:"),(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Follow ",(0,o.yg)("a",{parentName:"li",href:"https://nightlies.apache.org/flink/flink-docs-release-1.14/docs/dev/table/functions/udfs/"},"this")," for more insights on writing your UDF."),(0,o.yg)("li",{parentName:"ul"},"UDF needs to be added in the ",(0,o.yg)("inlineCode",{parentName:"li"},"function-type")," folder inside ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/tree/main/dagger-functions/src/main/java/com/gotocompany/dagger/functions/udfs"},"this")," on ",(0,o.yg)("inlineCode",{parentName:"li"},"dagger-functions")," subproject."),(0,o.yg)("li",{parentName:"ul"},"Extend either of ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/blob/main/dagger-common/src/main/java/com/gotocompany/dagger/common/udfs/ScalarUdf.java"},"ScalarUdf"),", ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/blob/main/dagger-common/src/main/java/com/gotocompany/dagger/common/udfs/TableUdf.java"},"TableUdf")," or ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/blob/main/dagger-common/src/main/java/com/gotocompany/dagger/common/udfs/AggregateUdf.java"},"AggregateUdf")," from ",(0,o.yg)("inlineCode",{parentName:"li"},"dagger-common"),". They are boilerplate contracts extending Flink UDF classes. These classes do some more preprocessing(like exposing some metrics) in the ",(0,o.yg)("inlineCode",{parentName:"li"},"open")," method behind the scene."),(0,o.yg)("li",{parentName:"ul"},"Register the UDF in ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/blob/main/dagger-functions/src/main/java/com/gotocompany/dagger/functions/udfs/factories/FunctionFactory.java"},"this")," class. This is required to let Flink know about your function."),(0,o.yg)("li",{parentName:"ul"},"If you have some business-specific use-cases and you don't want to add UDFs to the open-sourced repo, you can have a separate local codebase for those UDFs. Those UDFs need to be registered in a similar class like the ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/blob/main/dagger-common/src/main/java/com/gotocompany/dagger/common/udfs/UdfFactory.java"},(0,o.yg)("inlineCode",{parentName:"a"},"UDFFactory")),". Keep both the UDF classes and the factory class in the classpath of Dagger. Configure the fully qualified Factory class in the ",(0,o.yg)("inlineCode",{parentName:"li"},"FUNCTION_FACTORY_CLASSES")," parameter and you will be able to use the desired UDF in your query."))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"For adding UDF with Python:"),(0,o.yg)("ul",{parentName:"li"},(0,o.yg)("li",{parentName:"ul"},"Follow ",(0,o.yg)("a",{parentName:"li",href:"https://nightlies.apache.org/flink/flink-docs-release-1.14/docs/dev/python/table/udfs/overview/"},"this")," for more insights on writing your UDF."),(0,o.yg)("li",{parentName:"ul"},"UDF need to be added inside ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/tree/main/dagger-py-functions/udfs"},"this")," on ",(0,o.yg)("inlineCode",{parentName:"li"},"dagger-py-functions")," directory."),(0,o.yg)("li",{parentName:"ul"},"Ensure that the filename and method name on the python functions is the same. This name will be registered by dagger as a function name which later can be used on the query."),(0,o.yg)("li",{parentName:"ul"},"Ensure to add dependency needed for the python function on the ",(0,o.yg)("a",{parentName:"li",href:"https://github.com/goto/dagger/tree/main/dagger-py-functions/requirements.txt"},"requirements.txt")," file."),(0,o.yg)("li",{parentName:"ul"},"Add python unit test and the make sure the test is passed."),(0,o.yg)("li",{parentName:"ul"},"If you have some business-specific use-cases and you don't want to add UDFs to the open-sourced repo, you can have a separate local codebase for those UDFs and specify that file on the python configuration. "))),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("p",{parentName:"li"},"Bump up the version and raise a PR for the same. Also please add the registered function to the ",(0,o.yg)("a",{parentName:"p",href:"/dagger/docs/reference/udfs"},"list of udfs doc"),"."))),(0,o.yg)("p",null,"In the subsequent release of the dagger, your functions should be useable in the query."))}u.isMDXComponent=!0}}]);